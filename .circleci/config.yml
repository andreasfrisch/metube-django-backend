# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "backend/requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r backend/requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "backend/requirements.txt" }}
        
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python backend/metube/manage.py test

      - store_artifacts:
          path: test-reports
          destination: test-reports
  
  deploy:
    docker:
      - image: circleci/python:3.6.1
      
    working_directory: ~/repo

    steps:
      - checkout
      - setup-remote-docker
      # - type: shell
      #   name: Install Docker Client
      #   command: |
      #     curl -L -o /tmp/docker.tgz https://get.docker.com/builds/Linux/x86_64/docker-1.12.3.tgz
      #     tar -xz -C /tmp -f /tmp/docker.tgz
      #     mv /tmp/docker/docker* /usr/bin/
      #     curl -L "https://github.com/docker/compose/releases/download/1.9.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/bin/docker-compose
      #     chmod +x  /usr/bin/docker-compose
      #
      # - type: setup-docker-engine
      # - type: shell
      #   name: Verify Docker Works
      #   command: |
      #     docker --version
      #     docker run hello-world
      - run:
          name: Build docker container and push it
          command: |
            docker build -t metube/basic2 backend/
            docker tag metube/basic2:latest 624540041426.dkr.ecr.eu-central-1.amazonaws.com/metube/basic2:latest
            docker push 624540041426.dkr.ecr.eu-central-1.amazonaws.com/metube/basic2:latest

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master