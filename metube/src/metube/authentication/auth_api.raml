#%RAML 1.0
title: Metube Authentication Services
version: 1.0
baseUri: https://api.metube.dk/authentication
mediaType: application/json
securitySchemes:
  auth:
    type: Pass Through
    describedBy:
      headers:
        Authorization:
          description: Used to send a valid auth token by setting value to "Bearer {accessToken}". {accessToken} is returned upon creation or login.
traits:
  authorized:
    description: Request requires authorization.
    responses:
      403:
        body:
          examples:
            1005: |
              {
                "code": "users-1005",
                "msg": "Unauthorized access to user {userId} by user {authorizedUserId} for client {client}"
              }
      401:
        body:
          examples:
            1008: |
              {
                "code": "users-1008",
                "msg": "Provided access token is expired - please log in again."
              }

types:
  profileDTO:
    type: object
    properties:
      preferredName?: string
      fullName?: string
      firstName?: string
      lastName?: string
      birthDate?: birthDateDTO
      gender?: string
      sex?:
        enum: ["male", "intersex", "female"]
      heightInCm?: integer
      weightInKg?:
        type: number
        format: double
      address?: addressDTO
      timezone?: string

/v1/users/{userId}/properties:
  get:
    is: [authorized, userid]
    securedBy: [auth]
    description: Get user properties for {userId}
    responses:
      200:
        body:
          example: |
            {
              "role": "doctor",
              "status":"invited"
            }
  put:
    is: [authorized, userid]
    securedBy: [auth]
    description: Overwrite user properties for {userId}
    body:
      example: |
        {
          "role": "doctor",
          "status": "activated"
        }
    responses:
      200:

  delete:
    is: [authorized, userid]
    securedBy: [auth]
    description: Delete all user properties for {userId}
    responses:
      200:

  /{property}:
    get:
      is: [authorized, userid]
      securedBy: [auth]
      description: Get value of specific user properties for {userId}
      responses:
        200:
          body:
            example: |
              {
                "role": "doctor"
              }

    put:
      is: [authorized, userid]
      securedBy: [auth]
      description: Set value of specific property for {userId}
      body:
        example: |
          {
            "status": "activated"
          }
      responses:
        200:
